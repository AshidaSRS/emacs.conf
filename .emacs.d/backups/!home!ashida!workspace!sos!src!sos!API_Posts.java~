package sos;

import java.io.StringWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.*;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.UriInfo;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;

import Domain.Post.*;

@Path("/posts")
public class API_Posts{

	private Database db = new Database();
	private ResultSet rs;
	private PreparedStatement stmt;

//	@GET
//	@Path("{id : \\d+}") //support digit only
//	@Produces("application/xml")
//	public String posts_ID_ToXML(@PathParam("id") String id) throws JAXBException {
//		Connection con = this.db.connect();
//		StringWriter sr = new StringWriter();
//		List<Post.Get> posts = new ArrayList<Post.Get>();
//		JAXBContext jaxbContext = JAXBContext.newInstance(Posts.class);
//		javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
//		jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
//		try {
//			String sql = "SELECT * FROM posts WHERE usuario_id = " + id + ";";
//			this.stmt = con.prepareStatement(sql);
//			this.rs = this.stmt.executeQuery();
//			while(this.rs.next())
//				posts.add(Post.toPostGET(this.rs));
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		jaxbMarshaller.marshal(new Posts(posts), sr);
//		return sr.toString();
//	}

	@GET
	@Path("{id : \\d+}")
	@Produces("application/xml")
	public String posts_Filter_Number_ToXML(@Context UriInfo info, @PathParam("id") String id) throws JAXBException {
		String dinit = info.getQueryParameters().getFirst("date-init");
		String dend = info.getQueryParameters().getFirst("date-end");
		String from = info.getQueryParameters().getFirst("from");
		String to = info.getQueryParameters().getFirst("to");
		System.out.println(dinit + dend + from + to);
		Connection con = this.db.connect();
		StringWriter sr = new StringWriter();
		List<Post.Get> posts = new ArrayList<Post.Get>();
		JAXBContext jaxbContext = JAXBContext.newInstance(Posts.class);
		javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
		jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
		try {
			String sql = null;
			if ( dinit == null && dend == null && from == null && to == null)
				sql = "SELECT * FROM posts WHERE usuario_id = " + id + ";";
			else {
				String patternDate = "^([0-2][0-9]||3[0-1])-(0[0-9]||1[0-2])-([0-9][0-9])?[0-9][0-9]$";
				Pattern pattern_date = Pattern.compile(patternDate);
				if ( pattern_date.matcher(dinit).matches() && pattern_date.matcher(dend).matches())
					sql = "SELECT * FROM posts WHERE fecha BETWEEN " + from + " AND "+ to +" AND usuario_id = " + id + ";";	
				String patternNumber = "^(0|[1-9][0-9]*)";
				Pattern pattern_number = Pattern.compile(patternNumber);
				if ( pattern_number.matcher(from).matches() && pattern_number.matcher(to).matches()){
					int from_Int = Integer.parseInt(from);
					int to_Int = Integer.parseInt(to);
					if (from_Int >= 0 && to_Int >= 0){
						if ( from_Int == to_Int || to_Int == 0 )
							sql = "SELECT * FROM posts WHERE usuario_id = " + id + " LIMIT " + ((from_Int == 0) ? from_Int + 1 : from_Int) + ";";
						if ( from_Int != 0)
							sql = "SELECT * FROM posts WHERE usuario_id = " + id + " LIMIT " + ((from_Int != 0) ? from_Int - 1 : from_Int) + ", " 
									+ to_Int +";";
						if ( from_Int == 0)
							sql = "SELECT * FROM posts WHERE usuario_id = " + id + " LIMIT " + from_Int + ", " + to_Int +";";
					}
				}
			}
			
			System.out.println("sql: "+sql);
			this.stmt = con.prepareStatement(sql);
			this.rs = this.stmt.executeQuery();
			while(this.rs.next()) 
				posts.add(Post.toPostGET(this.rs));	
		} catch (SQLException | NumberFormatException e) {
			e.printStackTrace();
		}
		jaxbMarshaller.marshal(new Posts(posts), sr);
		return sr.toString();
	}

	@GET
	@Path("{id : \\d+}/friends/posts")
	@Produces("application/xml")
	public String posts_Filter_Friends_Number_ToXML(@PathParam("id") String id, @QueryParam("contenido") String contenido, @QueryParam("from") String from, @QueryParam("to") String to) throws JAXBException {
		Connection con = this.db.connect();
		StringWriter sr = new StringWriter();
		List<Post.Get> posts = new ArrayList<Post.Get>();
		JAXBContext jaxbContext = JAXBContext.newInstance(Posts.class);
		javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
		jaxbMarshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
		try {
			String sql = null;
			if ( from.trim().isEmpty() && to.trim().isEmpty() && contenido.trim().isEmpty() )
				sql = "SELECT * FROM posts WHERE usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ")";
			else {
				String patternDate = "^(((\\d{4})(-)(0[13578]|10|12)(-)(0[1-9]|[12][0-9]|3[01]))|"
						+ "(‌​(\\d{4})(-)(0[469]|11‌​)(-)(0[1-9]|[12][0-9‌​]|30))|((\\d{4})(-)(0‌​2)(-)(0[1-9]|"
						+ "[12][0-‌​9]|2[0-8]))|(([02468‌​][048]00)(-)(02)(-)(‌​29))|(([13579][26]00‌​)(-)(02)(-)(29))|"
						+ "(([‌​0-9][0-9][0][48])(-)‌​(02)(-)(29))|(([0-9]‌​[0-9][2468][048])(-)‌​(02)(-)(29))|"
						+ "(([0-9]‌​[0-9][13579][26])(-)‌​(02)(-)(29)))(\\s)(([‌​0-1][0-9]|2[0-4]):([‌​0-5][0-9]):([0-5][0-‌​9]))";
				Pattern pattern_date = Pattern.compile(patternDate);
				if ( pattern_date.matcher(from).matches() && pattern_date.matcher(to).matches())
					sql = "SELECT * FROM posts WHERE fecha BETWEEN '" + from + "' AND '"+ to +"' AND usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ";";	
				String patternNumber = "^(0|[1-9][0-9]*)";
				Pattern pattern_number = Pattern.compile(patternNumber);
				if ( pattern_number.matcher(from).matches() && pattern_number.matcher(to).matches()){
					int from_Int = Integer.parseInt(from);
					int to_Int = Integer.parseInt(to);
					if (from_Int >= 0 && to_Int >= 0){
						if ( from_Int == to_Int || to_Int == 0 )
							sql = "SELECT * FROM posts WHERE usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ") LIMIT " + ((from_Int == 0) ? from_Int + 1 : from_Int) + ";";
						if ( from_Int != 0)
							sql = "SELECT * FROM posts WHERE usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ") LIMIT " + ((from_Int != 0) ? from_Int - 1 : from_Int) + ", " 
									+ to_Int +";";
						if ( from_Int == 0)
							sql = "SELECT * FROM posts WHERE usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ") LIMIT " + from_Int + ", " + to_Int +";";
					}
				}
				if ( from.trim().isEmpty() && to.trim().isEmpty() && !contenido.trim().isEmpty() )
					sql = "SELECT * FROM posts WHERE contenido = '" + from + "' AND usuario_id IN (SELECT amigo_id FROM amigos WHERE usuario_id = " + id + ")";
			}
			this.stmt = con.prepareStatement(sql);
			this.rs = this.stmt.executeQuery();
			while(this.rs.next()) 
				posts.add(Post.toPostGET(this.rs));	
		} catch (SQLException | NumberFormatException e) {
			e.printStackTrace();
		}
		jaxbMarshaller.marshal(new Posts(posts), sr);
		return sr.toString();
	}

}