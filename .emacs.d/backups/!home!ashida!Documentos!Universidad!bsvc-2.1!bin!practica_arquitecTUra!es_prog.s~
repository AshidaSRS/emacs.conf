* Inicializa el SP y el PC
**************************
        ORG     $0
        DC.L    $8000           * Pila
        DC.L    INICIO          * PC

        ORG     $400

* Definición de equivalencias
*********************************

MR1A    EQU     $effc01       * de modo A (escritura)
MR2A    EQU     $effc01       * de modo A (2º escritura)
SRA     EQU     $effc03       * de estado A (lectura)
CSRA    EQU     $effc03       * de seleccion de reloj A (escritura)
CRA     EQU     $effc05       * de control A (escritura)
TBA     EQU     $effc07       * buffer transmision A (escritura)
RBA     EQU     $effc07       * buffer recepcion A  (lectura)
ACR		EQU		$effc09	      * de control auxiliar
IMR     EQU     $effc0B       * de mascara de interrupcion A (escritura)
ISR     EQU     $effc0B       * de estado de interrupcion A (lectura)

**************************** INIT *************************************************************
INIT:
        MOVE.B          #%00010000,CRA      * Reinicia el puntero MR1
        MOVE.B          #%00000011,MR1A     * 8 bits por caracter.
        MOVE.B          #%00000000,MR2A     * Eco desactivado.
        MOVE.B          #%11001100,CSRA     * Velocidad = 38400 bps.
        MOVE.B          #%00000000,ACR      * Velocidad = 38400 bps.
        MOVE.B		#%00000101,CRA      * Transmision y recepcion activados.
        RTS
**************************** FIN INIT *********************************************************

**************************** PRINT ************************************************************
PRINT:    		MOVE.L  D1,-(A7)  *Guardamos la direccion de retorno en D1
          		ADD     D1,D5    *D5 -> Puntero al prog principal
    			ADD     -(A7),D6  *Guardamos el primer parametro, que es el buffer de lectura en D6
    			MOVE.W  #0,D0    *Inicializa el contador [registro] de caracteres
BUCLEPRINT: 	MOVE.B  TBA,D7    *D7 -> Caracter leido
    			MOVE.B  D7,D6    *Guardamos el caracter en el buffer
          		ADD     #4,D6      *Avanzamos el puntero del buffer
          		CMP.B   #13,D7     *Comparamos lo que leemos con el caracter vacio
          		BEQ     FINPRINT     *Si el caracter es el vacio saltamos a la etiqueta FIN
          		ADD.B   #1,D0    *Sumamos 1 del caracter que hemos leido
          		BNE     BUCLEPRINT   *Volvemos al bucle de lectura
FINPRINT:       ADD.B   #1,D0    *Sumamos el caracter vacio y terminamos
          		ADD  D5,D1    *Devolvemos a D1 el puntero el prog principal
          		MOVE.L  (A7)+,D1  *Devolvemos el puntero de marco de pila
          		JMP     (A7)
          		RTS

**************************** FIN PRINT ********************************************************

**************************** SCAN ************************************************************
SCAN:   	MOVE.L		D1,-(A7)	*Guardamos la direccion de retorno en D1
			ADD			D1,D4		*D4 -> Puntero al prog principal
			ADD			-(A7),D3	*Guardamos el primer parametro, que es el buffer de lectura en D3
			MOVE.W		#0,D0		*Inicializa el contador [registro] de caracteres
BUCLESCAN:	MOVE.B 		RBA,D2		*D2 -> Caracter leido
			MOVE.B 		D2,D3		*Guardamos el caracter en el buffer
			ADD 		#4,D3  		*Avanzamos el puntero del buffer
			CMP.B		#13,D2 		*Comparamos lo que leemos con el caracter vacio
			BEQ			FIN 		*Si el caracter es el vacio saltamos a la etiqueta FIN
			ADD.B		#1,D0		*Sumamos 1 del caracter que hemos leido
			BNE			BUCLESCAN 	*Volvemos al bucle de lectura
FIN:		ADD.B		#1,D0		*Sumamos el caracter vacio y terminamos
			ADD 		D4,D1		*Devolvemos a D1 el puntero el prog principal
			MOVE.L 		(A7)+,D1	*Devolvemos el puntero de marco de pila
			JMP 		(A7)
			RTS
**************************** FIN SCAN ********************************************************


**************************** PROGRAMA PRINCIPAL **********************************************
INICIO: BSR             INIT                * Inicia el controlador
        BREAK
OTRO:  	MOVE.L          #$5000,-(A7)        * Prepara la dirección del buffer
        BSR             SCAN                * Recibe la linea
        ADD.L           #4,A7               * Restaura la pila
        MOVE.L          #$5000,-(A7)        * Prepara la dirección del buffer
        BSR             PRINT               * Imprime línea
        ADD.L           #4,A7               * Restaura la pila
	BRA		OTRO

        BREAK
**************************** FIN PROGRAMA PRINCIPAL ******************************************

